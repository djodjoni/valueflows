## Agenda

#### round trip

What do we need to do to complete a round trip example that works?  Who should do what?

#### @id vs. url

https://github.com/valueflows/valueflows/issues/45

#### owl:inverseOf

https://github.com/valueflows/valueflows/issues/52

#### types of relationships: existing vocab vs user defined types of relationships

https://github.com/valueflows/agent/issues/38

#### how specific is our relationship? (rdf:Property, vf:relationship, vf:agentRelationship)

https://github.com/valueflows/valueflows/issues/63

#### subclasses of Agent, which to support and which to use existing vocab for

https://github.com/valueflows/agent/issues/51

#### formatting relationship jsonld for discovery

https://github.com/valueflows/valueflows/issues/59  

#### separation of concerns

documenting current structure of repositories and which one stays responsible for which concerns


Meeting chat:

at
Lynn Foster joined group chat.
To list all available commands enter "/?".
	
Michael Williams	3:00 PM
https://github.com/valueflows/valueflows/wiki/Meetings
	
me	3:00 PM
round trip

What do we need to do to complete a round trip example that works? Who should do what?

@id vs. url

https://github.com/valueflows/valueflows/issues/45

owl:inverseOf

https://github.com/valueflows/valueflows/issues/52

types of relationships: existing vocab vs user defined types of relationships

https://github.com/valueflows/agent/issues/38

how specific is our relationship? (rdf:Property, vf:relationship, vf:agentRelationship)

https://github.com/valueflows/valueflows/issues/63

subclasses of Agent, which to support and which to use existing vocab for

https://github.com/valueflows/agent/issues/51

formatting relationship jsonld for discovery

https://github.com/valueflows/valueflows/issues/59

separation of concerns

documenting current structure of repositories and which one stays responsible for which concerns
Connor Turland joined group chat.
	
me	3:04 PM
round trip

What do we need to do to complete a round trip example that works? Who should do what?

@id vs. url

https://github.com/valueflows/valueflows/issues/45

owl:inverseOf

https://github.com/valueflows/valueflows/issues/52

types of relationships: existing vocab vs user defined types of relationships

https://github.com/valueflows/agent/issues/38

how specific is our relationship? (rdf:Property, vf:relationship, vf:agentRelationship)

https://github.com/valueflows/valueflows/issues/63

subclasses of Agent, which to support and which to use existing vocab for

https://github.com/valueflows/agent/issues/51

formatting relationship jsonld for discovery

https://github.com/valueflows/valueflows/issues/59

separation of concerns

documenting current structure of repositories and which one stays responsible for which concerns
https://github.com/valueflows/valueflows/wiki/Meetings
Who's here: Mikey, Connor, Pavlik, Lynn, Bob
Agenda: hard ones first:
Round trip
Types of relationships
how specific is our relationship
subclasses of Agent
....
Did we close off ID vs URL?
Lynn thinks yes
...
What do we need to do to complete a round trip example that works? Who should do what?
See the whole technology loop work.
Is holodex far off?
Mikey says, a lot of work to do it the way we want.
Holodex is the longer range one, let's start with something simpler
Put out from one app, read in to another.
Then follow our nose.
Get request.
Later content negotiation.
Simple get first.
Do some simple HTML,
simple lists,
avatars.
CORS headers
3-4-5 servers on different subdomains.
integrate data from multiple sources into a simple interface.
Then add more complexity.
Elf will play with Polymer, make something basic, simple graph.
Lynn will get hers working, too.
Holodex will come in later.
Connor made simple profile form.
Then display it.
Small app to make relationships.
Valuable, not a lot of work.
Publish code, show how to do it.
Data, schema, data, apps, to communicate to different audiences.
Connor and Ishan discussing links between platforms, Connor working on the links, want graph platform to work with this kind of data.
Browse links thru URL to URL.
Regardless of how you keep the data, the navigator knows how to navigate and present it.
Starting point, then follow your nose.
http://en.lodlive.it/
follows the linls
links
Connor: something like metamaps
	
elf Pavlik	3:27 PM
ACTION: elf to write minimal requirements for browser
	
me	3:27 PM
Mikey requests more visions, what is the end state we are shooting for
....
Mikey agrees ID vs URL is figured out.
Data for browser to work with.
json-ld for a particular resource is the missing part
	
Lynn Foster	3:29 PM
@id vs url - need the @id to link to a URI that returns LOD (jsonld)
	
me	3:30 PM
...
types of relationships: existing vocab vs user defined types of relationships

https://github.com/valueflows/agent/issues/38
Places where we have vocab in development but not finished.
In our app, all relationships are user defined, but have a behavior field that is usually a common relationship.
Pavlik says, let's publish the data and get more experience and then revisit.
When we want to integrate and query across multiple sources, we will confront the issues that need to be solved.
Lynn mentions issue of filtering.
Asks do we want to agree on a set of types?
Pavlik: work thru examples first.
We have different perspectives and backgrounds, make examples, discuss, propose alternatives.
Lynn proposes small set to discuss.
Sensorica Affiliate same as Member.
DHen has role-based relationships: Harvesting site, Harvester, Drying site
Harvesting site sounds like a resource.
Lynn says it's modeled as a farm, which is an agent (group agent).
Pavlik urges formalizing examples.
Lynn says if we start getting into resources, we won't get agents done.
So let's work with things we can agree are agents.
http://dhen.webfactional.com/accounting/agent-jsonld/
	
Michael Williams	3:41 PM
https://github.com/valueflows/valueflows/tree/master/use-cases
	
me	3:43 PM
Agents should have agency, are they all really agents
Lynn suggests discuss Affiliate
is it a valid relationship?
They might change it again.
In our software, we know it is like a member.
Is there a label, preferred label?
Pavlik returns to the idea of waiting until we need to integrate data.
Lynn asks does it make sense to make define a type of relationship called Member
or a small set of relationships that have known behjavior and sub-property off those?
Or deviate from those if necessary?
Mikey agrees with putting everything out for now and then look for the overlaps later.
We are agreed, integrate and refine later.
	
Lynn Foster	3:49 PM
relationship is instance of rdf:Property
	
me	3:49 PM
premature to amke superclasses
	
Lynn Foster	3:49 PM
super-properties
	
me	3:50 PM
we all agree that: "relationship is instance of rdf:Property"
How specific are relationships?
I.e. are Agent<->Agent relationships necessarily different from Agent<->Resource relationships?
Pavlik suggests focusing on Agent<->Agent
Once we move on the Agent<->Resource we can look at those and know more precisely what relationships we want.
Lynn is concerned about backtracking after holodex, tibor, etc etc are already using it
Pavlik says we can make it clear that they are experimentatl
don't promise stability
wait for experience with integrating data across sources
....next topic....
subclasses of Agent
	
Lynn Foster	3:59 PM
we agreed on keeping general for now, get more experience with how the LOD technology works, then be more specific as we need to
so rdf:Property for now
	
me	3:59 PM
which ones do we want to support
Mikey's opinion, don't worry about it yet.
Let people define from their own data and see what the commonality is.
We agree on Agent as the top level.
vf:Agent for awhile instead of FOAF:Agent?
yes, convert later
Can we agree on Person and Group as subclasses?
Pavlik wants to stick with those two for now.
Lynn says we in NRP land will need more subclasses
Pavlik says subclass in data as required
says we can use inference to distinguish e.g. Network
We all agree on user-defined types
Pavlik reiterates, publish formalized examples, integrate, then discuss how to create the common vocab.
As long as we don't modify the common context, we have complete freedom to publish examples.
We all agree "As long as we don't modify the common context, we have complete freedom to publish examples."
...
New topic: separation of concerns

documenting current structure of repositories and which one stays responsible for which concerns
Connor explains why he is here:
listening to different conversations in different groups
helping to create bridges
elf's statement will help to create links
feeling from different platforms
wanting to create mappings between groups
nodes in graphs
taxonomies
events, intentions will also show up in hylo
implementing them in different platforms
Connor will be traveling around trying to make bridges between platforms
Mikey likes it
Lynn thinks its fabulous
Pavlik says thanks, circles are closing
Connor Turland left group chat.
	
me	4:19 PM
Wrap up time
Mikey says, keep the rhythm going
Checkouts:
Mikey is appreciating the energy
some gravity puling everyone in
moving to a tighter orbit
Lynn totally agrees about the energy and the diverse opinions,
glad we got some agreements.
feel like I can go forward
Pavlik also glad we met again
likes puce bubbles
likes agreement on workflow
very optimistic
excited to work on the json-ld of this meeting
An adventure
Lynn appreciates elf keeping us on track
Mkey things there is no way we could go wrong
	
elf Pavlik	4:23 PM
Bob - agrees with everybody
	
Lynn Foster	4:23 PM
bob: agrees with everybody
happy about what connor is doing
	
me	4:24 PM
teeshirts!
