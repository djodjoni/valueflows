It might be useful to think of this stuff from the viewpoint of citizens of a different economic system.

Some of them maintain a bus, which other people can ride on.

A lot of community resources go into that bus. And a lot of work of the people who maintain and drive the bus. For them the bus is a series of processes.

For the people who ride the bus, it is a nice community service. But if they want the service to continue, they also understand that they have a responsibility to help in some way to maintain the bus.

So how would we model that?

Some implications of a different economic system:
* even in that different system, the bus will still have some reciprocal claims on the riders.
    * the reciprocity does not need to be settled with money, paid to the bus organization, which pays the driver and the maintainers and for the equipment and energy to propel the bus.
    * it could also be indirect, where the riders provide food and housing and other necessities of life for the drivers and maintenance people and in other ways provide resources for the bus and energy.
    * but one way or another, all of those flows of use value need to organize themselves in such a way that a somewhat balanced economy continues. Or it won't. See Maya, Anasazi, Hopewell, etc.
    * Likewise all of the people involved in those economic flows owe debts to the whole ecosystem around them, which also won't continue without constant care. See us now.





Thinking of resources as something that connects processes in IPO, same resource comes as output of one process and goes into input of another process. We could think of resources as Synchronous and Asynchronous elements in IPO chains. So one process needs to output the resource while other process takes it as it's input:
Asynchronous

    vf:MaterialResource
    vf:CurrencyResource

Synchronous

    vf:ServiceResource
    vf:UsageResource
    vf:WorkResource

The process that outputs usage and work still seems unclear, but we have many examples of processes that output services.


As of now, I am thinking of usage resources as resources themselves, with vf:underlyingResource of the material item (tool, equipment) that is being used. So I agree with @elf-pavlik that it is fuzzy how they come into existence. If we do adopt the underlying resource concept, we will need to use that as a connector in the flows to get back to the actual material resource.

They could come into existence during the use event, or could just exist as a resource that sits there waiting until someone makes use of it.... I will need to do some yaml to work this through.




Currently all verbs stay defined as rdfs:subPropertyOf vf:infolow and vf:outflow (which I think we should change to vf:input and vf:output to follow IPO model).

    input - process consumes the resource (and decrements stock which contains it)
    output - process creates the resource (and increments stock which contains it)

Having vf:WorkResource and vf:UsageResource we have 'time based resources' which processes actually consume and create. Do we need that vf:resourceEffect in addition to knowing if event represents input or output to the process?



In NRP, we have a bunch, but it is possible that it boils down to +, - =. Or, increment, decrement, no change.



I think we should keep in mind one of the principles we agreed to up front:

    The model must enable collaboration between different people in different organizations using different software on different platforms using different human and programming languages.

What I meant when I wrote that, as I think I explained in various settings, is that it should be usable using any software or almost no software: that is, via email, using hashtags, text messages, command lines, csv files (which is where the action is now in the various resource flow mapping conversations we have been involved in), etc etc.

If how to do this kind of thing using hashtags is not clear, I can bring in several examples from the wild.

I also think that a direction that is possible using linked open data and Solid is to allow anybody to post their own economic profile and intents and broadcast the intents and enter into conversations for action using any of the channels I mentioned, as well as purpose-built software.



 If we have for example 'vf:action': vf:consume we can think of it "This event consumed a quantity of that resource(stock)"
 
 or this process consumed a quantity of that resource?
 
 
 